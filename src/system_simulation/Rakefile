require "./simulation_runner.rb"

task default: %w[test]

task :compile do
  sim = SimulationRunner.new()
end

task :test_simple_seesaw do
  ruby "./modelica_model_generation/generate_modelica_model.rb ./modelica_model_generation/simple_seesaw.json > LineForceGenerated.mo"
  sim = SimulationRunner.new(model_name='LineForceGenerated')
  p sim.get_period()
end

task :test_doubltetrahedron_2DOF_spring do
  ruby "./modelica_model_generation/generate_modelica_model.rb ./modelica_model_generation/doubltetrahedron_2DOF_spring.json > LineForceGenerated.mo"
  `cat LineForceGenerated.mo`
  sim = SimulationRunner.new(model_name='LineForceGenerated')
  p sim.get_period()
end

task :test_doubltetrahedron do
  ruby "./modelica_model_generation/generate_modelica_model.rb ./modelica_model_generation/doubltetrahedron.json > LineForceGenerated.mo"
  `cat LineForceGenerated.mo`
  sim = SimulationRunner.new(model_name='LineForceGenerated')
  p sim.get_period()
end

task :test_sketchup_tetrahedron do
  ruby "./modelica_model_generation/generate_modelica_model.rb ./modelica_model_generation/sketchup_tetrahedron.json > LineForceGenerated.mo"
  `cat LineForceGenerated.mo`
  sim = SimulationRunner.new(model_name='LineForceGenerated')
  p sim.get_period()
end

task :test_seesaw do
  ruby "./modelica_model_generation/generate_modelica_model.rb ./modelica_model_generation/seesaw_3.json > LineForceGenerated.mo"
  `cat LineForceGenerated.mo`
  sim = SimulationRunner.new(model_name='LineForceGenerated')
  p sim.get_period()
end

task :test_get_period do
  sim = SimulationRunner.new()
  p sim.get_period()
end


task default: %w[test]

