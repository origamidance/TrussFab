require "./simulation_runner.rb"
require "./linear_state_space_model.rb"

task default: %w[test]

task :compile do
  sim = SimulationRunner.new_from_json_export()
end

task :test_simulation do
  file = File.read("./test_models/dragon_13_users.json")
  sim = SimulationRunner.new_from_json_export(file)
  p sim.get_hub_time_series
end

task :test_preloading do
  file = File.read("./test_models/preloaded.json")
  sim = SimulationRunner.new_from_json_export(file)
  p sim.get_preloaded_positions
end

task :test_steady_state do
  file = File.read("./test_models/preloaded.json")
  sim = SimulationRunner.new_from_json_export(file)
  p sim.get_steady_state_positions
end


task :test_spring_length_initilization do
  file = File.read("./test_models/preloaded.json")
  sim = SimulationRunner.new_from_json_export(file)
  p sim.get_spring_extensions
end

task :test_seesaw_linearization do
  file = File.read("./test_models/sketchup_tetrahedron.json")
  sim = SimulationRunner.new_from_json_export(file)
  linear_model = sim.linearize
  File.open('linear_model.dump', 'wb') { |f| f.write(Marshal.dump(linear_model)) }

  p linear_model
  # linear_model.cp_to_python
end

task :test_bode_plot do
  ss = Marshal.load(File.read('linear_model.dump'))
  p ss.bode_plot
end


task :test_get_period do
  sim = SimulationRunner.new()
end

task :parse_linear_state_space_model do
  model = LinearStateSpaceModel.new("./test_models/linear_tetra.mo")
  puts model.eigenfreq
end

task default: %w[test]
